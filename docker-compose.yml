version: "3.9"

services:

  nginx:
    image: nginx:1.19-alpine
    container_name: iss-proxy
    restart: unless-stopped
    tty: true
    user: root
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dist:/var/www/
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - iss-network


  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  api:
    image: kirilllapushinskiy/iss-api-service:0.5.0
    container_name: api-service
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data:/project/data
      - ./config.yml:/project/config.yml
    networks:
      - iss-network
    command: >
      sh -c "alembic upgrade head && python3 -m app"

  postgres:
    image: postgres:15.1-alpine
    container_name: iss-database
    env_file:
      - .env
    command:
      - "postgres"
      - "-c"
      - "max_connections=10"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "work_mem=64MB"
      - "-c"
      - "maintenance_work_mem=128MB"
      - "-c"
      - "max_prepared_transactions=30"
      - "-c"
      - "random_page_cost=1.7"
      - "-c"
      - "temp_file_limit=1GB"
      - "-c"
      - "log_min_error_statement=INFO"
      - "-c"
      - "log_min_messages=FATAL"
      - "-c"
      - "log_statement=none"
      - "-c"
      - "log_destination=stderr"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d iss" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 7s
    restart: always
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    networks:
      - iss-network

networks:
  iss-network:
    driver: bridge
